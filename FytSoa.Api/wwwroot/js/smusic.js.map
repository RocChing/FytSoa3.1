{"version":3,"sources":["smusic.js"],"names":["doc","document","win","window","utils","MoUtils","isTouch","version","homepage","thumbnailPlaceholder","$","$$","bind","noop","EVENT_START","EVENT_MOVE","EVENT_END","Range","element","sliderSelector","direction","callback","end","$bar","$slider","barSize","width","offsetWidth","height","offsetHeight","event","stopPropagation","start","offset","x","clientX","touches","y","clientY","offsetLeft","offsetTop","MAX","moveHandle","thisX","thisY","range","Math","min","max","unbind","defaultConfig","container","body","playIndex","playMode","volume","autoPlay","panel","uid","error","Error","message","log","console","calcTime","hour","minute","second","times","String","parseInt","time","length","__getSmusicTpl","isList","panelClass","_lyricCache","timeReg","_parseLyric","lyric","lyricRows","replace","trim","split","lyricData","i","content","len","decodeURIComponent","timeRegArr","match","t","Number","slice","_parseLyricArray","list","word","text","_getLyric","playList","index","song","lyricUrl","cacheName","http","type","url","done","response","fail","_getRandomIndex","array","push","random","_createDom","options","id","smusic","createElement","className","setAttribute","toString","innerHTML","appendChild","__domCache","dom","scroll","title","singer","thumbnail","btn","prev","play","next","mode","progress","bar","buffer","value","slider","__renderList","self","data","html","forEach","item","active","__renderLyric","rowHeight","lyricHeight","parentNode","top","toScroll","scrollTop","_bufferTimer","__setBuffer","audio","smusicId","DOM","AUDIO","clearInterval","progressWidth","parseFloat","isNaN","duration","totalTime","textContent","setInterval","buffered","undefined","bufferWidth","style","abs","__bindAction","round","volumeHeight","hasClass","tab","getAttribute","addClass","removeClass","surplusTime","currentTime","currentProcess","$lyric","$activeLyric","node","transform","_mode","setMode","isPlay","pause","playByMode","rect","getBoundingClientRect","left","setVolume","muted","__playMusic","call","isInit","listLength","tempHandle","removeEventListener","currentSong","src","load","addEventListener","config","SmohanMusic","Array","isArray","assign","songLength","addSong","music","refreshList","BTN","$currentSong","barHeight","sliderHeight","valueHeight","sliderTop","$Mode","init","create","getElementsByTagName","trigger","getCurrentInfo","destroy","SMusic"],"mappings":"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","file":"smusic.js","sourcesContent":["/*\r\n * smusic v2.1.0\r\n * author : smohan\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 https://smohan.net.\r\n * https://smohan.net/lab/smusic\r\n * https://github.com/S-mohan/smusic\r\n */\r\n\r\n(() => {\r\n    \"use strict\";\r\n    const [doc, win, utils, isTouch] = [document, window, MoUtils, (\"ontouchend\" in document)];\r\n    const [version, homepage, thumbnailPlaceholder] = ['2.1.0', 'https://smohan.net/lab/smusic', 'https://s-mohan.github.io/demo/static/img/smusic.jpg'];\r\n    const [$, $$, bind, noop] = [utils.$, utils.$$, utils.bind, function () { }];\r\n\r\n    const\r\n        EVENT_START = isTouch ? 'touchstart' : 'mousedown',\r\n        EVENT_MOVE = isTouch ? 'touchmove' : 'mousemove',\r\n        EVENT_END = isTouch ? 'touchend' : 'mouseup';\r\n\r\n    /**\r\n     * 模拟一个滑块方法\r\n     * @param element 进度条容器\r\n     * @param sliderSelector 滑块选择器\r\n     * @param direction 滑动方向 horizontal | vertical\r\n     * @param callback 移动时回调移动距离\r\n     * @param end 结束滑动时回调\r\n     */\r\n    const Range = (element, sliderSelector, direction = 'horizontal', callback = noop, end = noop) => {\r\n        const [$bar, $slider] = [element, $(sliderSelector, element)];\r\n        const barSize = {\r\n            width: $bar.offsetWidth,\r\n            height: $bar.offsetHeight\r\n        };\r\n        bind($slider, 'click', event => event.stopPropagation());\r\n        bind($slider, EVENT_START, function (event) {\r\n            event = event || win.event;\r\n            event.stopPropagation();\r\n            let start, offset;\r\n            start = {\r\n                x: event.clientX || event.touches[0].clientX,\r\n                y: event.clientY || event.touches[0].clientY\r\n            };\r\n            offset = {\r\n                x: this.offsetLeft,\r\n                y: this.offsetTop\r\n            };\r\n            const MAX = (direction == \"horizontal\") ? barSize.width : barSize.height;\r\n            const moveHandle = function (event) {\r\n                event = event || win.event;\r\n                event.stopPropagation();\r\n                let thisX = event.clientX || event.touches[0].clientX,\r\n                    thisY = event.clientY || event.touches[0].clientY;\r\n                //x : left to right\r\n                //y : bottom to top\r\n                const range = Math.min(MAX, Math.max(0, ((direction == \"horizontal\") ? (offset.x + (thisX - start.x)) : (offset.y + (thisY - start.y)))));\r\n                (callback && typeof callback == \"function\") && callback(range);\r\n            };\r\n            bind(doc, EVENT_MOVE, moveHandle);\r\n            bind(doc, EVENT_END, function (event) {\r\n                (end && typeof end == \"function\") && end();\r\n                utils.unbind(doc, EVENT_MOVE, moveHandle);\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * 默认配置项\r\n     * @type {{container: HTMLElement, playIndex: number, playMode: number, volume: number, autoPlay: boolean}}\r\n     */\r\n    const defaultConfig = {\r\n        //放置Smusic的DOM容器\r\n        container: doc.body,\r\n        //初始化播放索引\r\n        playIndex: 0,\r\n        //初始化播放模式 (1 : 列表循环  2 : 随机播放  3 : 单曲循环)\r\n        playMode: 1,\r\n        //初始化音量 (0 - 1之间)\r\n        volume: .5,\r\n        //自动播放\r\n        autoPlay: true,\r\n        //加载时默认显示面板，['list', 'lyric']\r\n        panel: 'list'\r\n    };\r\n\r\n    let uid = 1;\r\n\r\n\r\n    /**\r\n     * 抛出异常\r\n     * @param message\r\n     */\r\n    const error = message => {\r\n        throw new Error(\"Smusic Error：\" + message);\r\n    };\r\n\r\n\r\n    /**\r\n     * 输出log\r\n     * @param message\r\n     */\r\n    const log = message => win.console.log(\"Smusic Log：\" + message);\r\n\r\n\r\n    /**\r\n     * 格式化时间\r\n     * @param time\r\n     * @returns {string}\r\n     */\r\n    const calcTime = time => {\r\n        let hour, minute, second, times = '';\r\n        hour = String(parseInt(time / 3600, 10));\r\n        minute = String(parseInt((time % 3600) / 60, 10));\r\n        second = String(parseInt(time % 60, 10));\r\n        if (hour != '0') {\r\n            if (hour.length == 1) hour = '0' + hour;\r\n            times += (hour + ':');\r\n        }\r\n        if (minute.length == 1) minute = '0' + minute;\r\n        times += (minute + ':');\r\n        if (second.length == 1) second = '0' + second;\r\n        times += second;\r\n        return times;\r\n    };\r\n\r\n\r\n    /**\r\n     * [获取模板]\r\n     * @param  {String} panel [默认显示面板]\r\n     * @return {String} \r\n     */\r\n    const __getSmusicTpl = (panel = 'list') => {\r\n\r\n        const isList = panel == 'list'\r\n        const panelClass = isList ? 'show-list' : ''\r\n\r\n        return `\r\n<main class=\"smusic-main\">\r\n    <div class=\"smusic-panel\">\r\n        <div class=\"smusic-music-info\">\r\n            <div class=\"smusic-music-scroll js-smusic-scroll--title\">\r\n                <strong class=\"smusic-music--title js-smusic-song--title\">Smusic</strong>\r\n                <small class=\"smusic-music--singer js-smusic-song--singer\">smohan</small>\r\n            </div>\r\n        </div>\r\n        <figure class=\"smusic-music-thumbnail\">\r\n            <img src=\"${thumbnailPlaceholder}\" class=\"js-smusic-song--thumbnail\" alt=\"${homepage}\" />\r\n        </figure>\r\n        <!--smusic start: music play ctrl https://smohan.net/lab/smusic -->\r\n        <div class=\"smusic-music-ctrl\">\r\n            <a class=\"smusic-ctrl--prev js-smusic-btn--prev\" title=\"上一首\"><i class=\"smusic-ico-prev\"></i></a>\r\n            <a class=\"smusic-ctrl--play smusic-music-play js-smusic-btn--play\" title=\"暂停\"></a>\r\n            <a class=\"smusic-ctrl--next js-smusic-btn--next\"><i class=\"smusic-ico-next\" title=\"下一首\"></i></a>\r\n        </div>\r\n        <!--smusic end: music ctrl https://smohan.net/lab/smusic -->\r\n    </div>\r\n    <div class=\"smusic-panel\">\r\n        <div class=\"smusic-panel--scroll js-smusic-scroll--panel ${panelClass}\">\r\n            <div class=\"smusic-lyric--wrap\">\r\n                <ul class=\"smusic-lyric--scroll js-smusic-scroll--lyric\"></ul>\r\n            </div>\r\n            <div class=\"smusic-list--wrap\">\r\n                <ul class=\"smusic-list--scroll js-smusic-scroll--list\"></ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n<aside class=\"smusic-aside\">\r\n    <div class=\"smusic-ctrl smusic-ctrl--left\">\r\n        <div class=\"smusic-ctrl--volume\">\r\n            <a class=\"smusic-volume--toggle js-smusic-btn--volume\"></a>\r\n            <div class=\"smusic-volume--bar js-smusic-volume--bar\">\r\n                <span class=\"smusic-volume--value js-smusic-volume--value\"></span>\r\n                <span class=\"smusic-volume--slider js-smusic-volume--slider\"></span>\r\n            </div>\r\n        </div>\r\n        <a class=\"smusic-ctrl--mode smusic-mode--loop js-smusic-btn--mode\" data-play-mode=\"1\"></a>\r\n    </div>\r\n    <div class=\"smusic-progress js-smusic-progress\">\r\n        <span class=\"smusic-progress--buffer js-smusic-progress--buffer\"></span>\r\n        <span class=\"smusic-progress--value js-smusic-progress--value\"><i class=\"smusic-progress--slider js-smusic-progress--slider\"></i></span>\r\n    </div>\r\n    <div class=\"smusic-ctrl smusic-ctrl--right\">\r\n        <time class=\"smusic-time js-smusic-time\">00:00/00:00</time>\r\n        <a class=\"smusic-ctrl--lyric js-smusic-btn--lyric js-smusic-panel--tab ${!isList ? 'active' : ''}\" data-panel=\"lyric\" title=\"歌词\"><i class=\"smusic-ico-lyric\"></i></a>\r\n        <a class=\"smusic-ctrl--list js-smusic-btn--list js-smusic-panel--tab ${isList ? 'active' : ''}\" data-panel=\"list\" title=\"列表\"><i class=\"smusic-ico-list\"></i></a>\r\n    </div>\r\n</aside>`\r\n    }\r\n\r\n\r\n\r\n    //歌词缓存\r\n    const _lyricCache = {};\r\n    const timeReg = /\\[\\d*:\\d*((\\.|:)\\d*)*]/g;\r\n\r\n\r\n    /**\r\n     * 解析歌词\r\n     * @param lyric\r\n     * @returns {{}}\r\n     * @private\r\n     */\r\n    const _parseLyric = function (lyric) {\r\n        // 将歌词通过换行符转换为数组，\r\n        // 每一行格式如 [00:00.00] 作曲 : 赵雷\r\n        const lyricRows = lyric\r\n            .replace(/(\\[\\d*:\\d*((\\.|:)\\d*)*])/gm, '\\n$1').trim() // 草，酷狗的歌词竟然是一坨，没有换行符，这里要专门处理\r\n            .replace(/\\\\n/gm, '\\n')\r\n            .split('\\n');\r\n        const lyricData = {}; //时间为key, 歌词做value\r\n        let i = 0,\r\n            content, len = lyricRows.length;\r\n        for (i; i < len; i++) {\r\n            content = decodeURIComponent(lyricRows[i]);\r\n            if (typeof content !== \"string\") break;\r\n            const timeRegArr = content.match(timeReg);\r\n            if (!timeRegArr) continue;\r\n            for (let i = 0, len = timeRegArr.length; i < len; i++) {\r\n                const t = timeRegArr[i];\r\n                const\r\n                    minute = Number(String(t.match(/\\[\\d*/i)).slice(1)),\r\n                    second = Number(String(t.match(/\\:\\d*/i)).slice(1));\r\n                const time = minute * 60 + second;\r\n                lyricData[time] = content.replace(timeReg, ''); //内容区去掉时间\r\n            }\r\n        }\r\n        return lyricData;\r\n    };\r\n\r\n    const _parseLyricArray = function (list) {\r\n        if (!list || typeof list !== \"array\") {\r\n            return 0;\r\n        }\r\n        const lyricData = {};\r\n        let i = 0, len = list.length;\r\n        for (i; i < len; i++) {\r\n            let word = list[i];\r\n            lyricData[word.time] = word.text;\r\n        }\r\n        return lyricData;\r\n    };\r\n\r\n    /**\r\n     * 加载歌词\r\n     * @param playList\r\n     * @param index\r\n     * @param callback\r\n     * @private\r\n     */\r\n    const _getLyric = function (playList, index, callback) {\r\n        const song = playList[index];\r\n        const lyricUrl = song['lyric'];\r\n        const cacheName = '_smusic_lyric_' + index;\r\n        if (!lyricUrl) {\r\n            _lyricCache[cacheName] = _parseLyricArray(song['words']); //eof\r\n        }\r\n        if (!_lyricCache[cacheName]) {\r\n            utils.http({\r\n                type: 'GET',\r\n                url: lyricUrl,\r\n                done: function (response) {\r\n                    if (response) {\r\n                        response = _parseLyric(response);\r\n                    } else {\r\n                        response = -1; //empty\r\n                    }\r\n                    _lyricCache[cacheName] = response;\r\n                    callback(_lyricCache[cacheName]);\r\n                },\r\n                fail: error => {\r\n                    _lyricCache[cacheName] = -2; //fail\r\n                    callback(_lyricCache[cacheName]);\r\n                }\r\n            })\r\n        }\r\n        callback(_lyricCache[cacheName]);\r\n    };\r\n\r\n    /**\r\n     * 获取一个不包含当期索引在内的随机索引\r\n     * @param playIndex\r\n     * @param len\r\n     * @returns {*}\r\n     * @private\r\n     */\r\n    const _getRandomIndex = function (playIndex, len) {\r\n        let array = [];\r\n        for (let i = 0; i < len; i++) {\r\n            if (i != playIndex) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        const random = parseInt(Math.random() * (len - 1));\r\n        const index = array[random];\r\n        array = null;\r\n        return index;\r\n    };\r\n\r\n    /**\r\n     * 创建DOM\r\n     * @param container\r\n     * @returns {{element: Element, id: number}}\r\n     * @private\r\n     */\r\n    const _createDom = (options = {}) => {\r\n        const container = options.container;\r\n\r\n        let id = uid++;\r\n        const smusic = doc.createElement('div');\r\n        smusic.id = 'smohan-smusic-' + id;\r\n        smusic.className = 'smusic-container';\r\n        smusic.setAttribute('data-smusic-version', version);\r\n        smusic.setAttribute('data-smusic-homepage', homepage);\r\n        smusic.setAttribute('data-smusic-id', id.toString());\r\n        smusic.innerHTML = __getSmusicTpl(options.panel || 'list') + '<audio muted=\"muted\" class=\"js-smusic--audio\" hidden></audio>';\r\n        container.appendChild(smusic);\r\n        return {\r\n            element: smusic,\r\n            id: id\r\n        };\r\n    };\r\n\r\n\r\n    /**\r\n     * 缓存Dom\r\n     * @returns {__domCache}\r\n     * @private\r\n     */\r\n    const __domCache = function () {\r\n        const smusic = this.smusic;\r\n        this.dom = {\r\n            scroll: {\r\n                title: $('.js-smusic-scroll--title', smusic),\r\n                panel: $('.js-smusic-scroll--panel', smusic),\r\n                lyric: $('.js-smusic-scroll--lyric', this.panel),\r\n                list: $('.js-smusic-scroll--list', this.panel),\r\n            },\r\n            song: {\r\n                title: $('.js-smusic-song--title', smusic),\r\n                singer: $('.js-smusic-song--singer', smusic),\r\n                thumbnail: $('.js-smusic-song--thumbnail', smusic)\r\n            },\r\n            btn: {\r\n                prev: $('.js-smusic-btn--prev', smusic),\r\n                play: $('.js-smusic-btn--play', smusic),\r\n                next: $('.js-smusic-btn--next', smusic),\r\n                volume: $('.js-smusic-btn--volume', smusic),\r\n                mode: $('.js-smusic-btn--mode', smusic),\r\n                lyric: $('.js-smusic-btn--lyric', smusic),\r\n                list: $('.js-smusic-btn--list', smusic)\r\n            },\r\n            time: $('.js-smusic-time', smusic),\r\n            progress: {\r\n                bar: $('.js-smusic-progress', smusic),\r\n                buffer: $('.js-smusic-progress--buffer', this.bar),\r\n                value: $('.js-smusic-progress--value', this.bar),\r\n                slider: $('.js-smusic-progress--slider', this.bar)\r\n            },\r\n            volume: {\r\n                bar: $('.js-smusic-volume--bar', smusic),\r\n                value: $('.js-smusic-volume--value', this.bar),\r\n                slider: $('.js-smusic-volume--slider', this.bar)\r\n            }\r\n        };\r\n    };\r\n\r\n\r\n    /**\r\n     * 渲染列表\r\n     * @private\r\n     */\r\n    const __renderList = function () {\r\n        const self = this,\r\n            list = self.dom.scroll.list,\r\n            data = self.playList;\r\n        let html = '';\r\n        data.forEach((item, index) => {\r\n            const active = index === self.playIndex ? ' active' : '';\r\n            html += `<li class=\"js-smusic-song--item${active}\" data-song-index=\"${index}\">\r\n<span class=\"song-animate\"><i></i><i></i><i></i></span>\r\n<span class=\"song-title\" title=\"${item.title}\">${item.title}</span>\r\n<span class=\"song-singer\" title=\"${item.singer}\">${item.singer}</span>\r\n</li>`;\r\n        });\r\n        list.innerHTML = html;\r\n    };\r\n\r\n\r\n    /**\r\n     * 渲染歌词\r\n     * @private\r\n     */\r\n    const __renderLyric = function () {\r\n        const self = this,\r\n            rowHeight = 30;\r\n        const lyricHeight = self.dom.scroll.lyric.parentNode.offsetHeight;\r\n        let html = '',\r\n            i = 0;\r\n        _getLyric(this.playList, this.playIndex, function (lyric) {\r\n            if (typeof lyric === \"number\") {\r\n                switch (lyric) {\r\n                    case 0:\r\n                        html += `<li class=\"empty\">暂无歌词</li>`;\r\n                        break;\r\n                    case -1:\r\n                        html += `<li class=\"empty\">歌词解析失败</li>`;\r\n                        break;\r\n                    case -2:\r\n                        html += `<li class=\"empty\">歌词加载失败</li>`;\r\n                        break;\r\n                }\r\n                self.dom.scroll.lyric.innerHTML = html;\r\n            } else {\r\n                for (let time in lyric) {\r\n                    const top = rowHeight * i,\r\n                        toScroll = top >= (lyricHeight / 2 - rowHeight);\r\n                    let content = lyric[time] || homepage;\r\n                    if (typeof content !== \"string\") {\r\n                        content = content.content;\r\n                    }\r\n                    lyric[time] = {\r\n                        index: i,\r\n                        content: content,\r\n                        top: top,\r\n                        scrollTop: toScroll ? top - (lyricHeight / 2 - rowHeight) : 0,\r\n                        toScroll: toScroll\r\n                    };\r\n                    i++;\r\n                    html += `<li>${content}</li>`;\r\n                }\r\n                self.dom.scroll.lyric.innerHTML = html + `<li><a href=\"${homepage}\" title=\"Smusic\" target=\"_blank\">${homepage}</a></li>`;\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    //记录buffer的Interval\r\n    const _bufferTimer = {};\r\n\r\n    /**\r\n     * 设置播放缓冲\r\n     * @private\r\n     */\r\n    const __setBuffer = function () {\r\n        const [DOM, AUDIO, smusicId] = [this.dom, this.audio, this.smusicId];\r\n        _bufferTimer[smusicId] && clearInterval(_bufferTimer[smusicId]);\r\n        const progressWidth = parseFloat(DOM.progress.bar.offsetWidth);\r\n        if (!isNaN(AUDIO.duration)) {\r\n            const totalTime = calcTime(AUDIO.duration);\r\n            DOM.time.textContent = `00:00/${totalTime}`;\r\n        }\r\n        _bufferTimer[smusicId] = setInterval(function () {\r\n            const buffer = AUDIO.buffered.length;\r\n            if (buffer > 0 && AUDIO.buffered != undefined) {\r\n                const bufferWidth = (AUDIO.buffered.end(buffer - 1) / AUDIO.duration) * progressWidth;\r\n                DOM.progress.buffer.style.width = bufferWidth + 'px';\r\n                if (Math.abs(AUDIO.duration - AUDIO.buffered.end(buffer - 1)) < 1) {\r\n                    DOM.progress.buffer.style.width = progressWidth + 'px';\r\n                    clearInterval(_bufferTimer[smusicId]);\r\n                }\r\n            }\r\n        }, 1e3);\r\n    };\r\n\r\n    /**\r\n     * 绑定事件\r\n     * @private\r\n     */\r\n    const __bindAction = function () {\r\n        const [self, DOM, AUDIO] = [this, this.dom, this.audio];\r\n        //进度条宽度\r\n        const progressWidth = Math.round(DOM.progress.bar.offsetWidth);\r\n        const volumeHeight = Math.round(DOM.volume.bar.offsetHeight);\r\n\r\n        //列表面板和歌词面板切换\r\n        bind(self.smusic, 'click', '.js-smusic-panel--tab', function (event) {\r\n            event.stopPropagation();\r\n            if (utils.hasClass(this, 'active')) return false;\r\n            const tab = this.getAttribute('data-panel');\r\n            utils.addClass(this, 'active');\r\n            if (tab === 'list') {\r\n                utils.removeClass(DOM.btn.lyric, 'active');\r\n                utils.addClass(DOM.scroll.panel, 'show-list');\r\n            } else {\r\n                utils.removeClass(DOM.btn.list, 'active');\r\n                utils.removeClass(DOM.scroll.panel, 'show-list');\r\n            }\r\n        });\r\n\r\n        //Audio timeupdate事件\r\n        bind(AUDIO, 'timeupdate', function () {\r\n            if (!isNaN(AUDIO.duration)) {\r\n                const\r\n                    surplusTime = calcTime(AUDIO.currentTime),\r\n                    totalTime = calcTime(AUDIO.duration),\r\n                    currentProcess = (AUDIO.currentTime / AUDIO.duration) * progressWidth;\r\n                //当前播放时间/总时间 = 播放百分比\r\n                //播放百分比 * 进度条宽度 = 当前播放进度\r\n                DOM.time.textContent = `${surplusTime}/${totalTime}`;\r\n                const range = Math.min(currentProcess, progressWidth);\r\n                DOM.progress.value.style.width = range + 'px';\r\n                //歌词\r\n                const cacheName = '_smusic_lyric_' + self.playIndex;\r\n                const lyricData = _lyricCache[cacheName];\r\n                if (!lyricData) return;\r\n                const currentTime = Math.round(AUDIO.currentTime);\r\n                const lyric = lyricData[currentTime];\r\n                if (!lyric || typeof lyric === \"number\") return; //当前时间点没有对应到歌词，结束并返回当前行歌词;\r\n                const index = lyric['index'],\r\n                    toScroll = lyric['toScroll'],\r\n                    $lyric = $$('li', DOM.scroll.lyric)[index],\r\n                    $activeLyric = $$('li.active', DOM.scroll.lyric);\r\n                $activeLyric.forEach(node => {\r\n                    node && utils.removeClass(node, 'active');\r\n                });\r\n                $lyric && utils.addClass($lyric, 'active');\r\n                DOM.scroll.lyric.style.transform = toScroll ? 'translate3d(0, -' + lyric.scrollTop + 'px, 0)' : 'translate3d(0, 0, 0)';\r\n            }\r\n        });\r\n\r\n        //播放模式切换\r\n        bind(DOM.btn.mode, 'click', function () {\r\n            const mode = this.getAttribute('data-play-mode');\r\n            let _mode;\r\n            switch (Number(mode)) {\r\n                case 1:\r\n                    _mode = 2;\r\n                    break;\r\n                case 2:\r\n                    _mode = 3;\r\n                    break;\r\n                case 3:\r\n                    _mode = 1;\r\n                    break;\r\n            }\r\n            self.setMode(_mode);\r\n        });\r\n\r\n        //播放暂停\r\n        bind(DOM.btn.play, 'click', function () {\r\n            const isPlay = utils.hasClass(this, 'smusic-music-play');\r\n            if (isPlay) {\r\n                self.pause();\r\n            } else {\r\n                self.play();\r\n            }\r\n        });\r\n\r\n        //播放结束后调用ended事件，开始下一首\r\n        bind(AUDIO, 'ended', () => self.playByMode('ended'));\r\n        //上一首\r\n        bind(DOM.btn.prev, 'click', () => self.prev());\r\n\r\n        //下一首\r\n        bind(DOM.btn.next, 'click', () => self.next());\r\n\r\n        //拖动进度条\r\n        Range(DOM.progress.bar, '.js-smusic-progress--slider', 'horizontal', range => {\r\n            const progress = Math.max(0, Math.min(range / progressWidth, progressWidth));\r\n            if (AUDIO.currentTime && AUDIO.duration) {\r\n                AUDIO.currentTime = Math.round(progress * AUDIO.duration);\r\n            }\r\n        });\r\n\r\n        //点击进度条\r\n        bind(DOM.progress.bar, 'click', function (event) {\r\n            event.stopPropagation();\r\n            const rect = this.getBoundingClientRect();\r\n            const progress = Math.min(progressWidth, Math.abs(event.clientX - rect.left)) / progressWidth;\r\n            if (AUDIO.currentTime && AUDIO.duration) {\r\n                AUDIO.currentTime = Math.round(progress * AUDIO.duration);\r\n                self.play();\r\n            }\r\n        });\r\n\r\n        //音量拖动\r\n        Range(DOM.volume.bar, '.js-smusic-volume--slider', 'vertical', range => {\r\n            const volume = Number((volumeHeight - range) / volumeHeight);\r\n            self.setVolume(volume);\r\n        });\r\n\r\n        //音量静音开关\r\n        bind(DOM.btn.volume, 'click', function (event) {\r\n            if (AUDIO.muted) {\r\n                utils.removeClass(this, 'smusic-volume--mute');\r\n                this.setAttribute('title', '静音');\r\n                AUDIO.muted = false;\r\n            } else {\r\n                utils.addClass(this, 'smusic-volume--mute');\r\n                this.setAttribute('title', '取消静音');\r\n                AUDIO.muted = true;\r\n            }\r\n        });\r\n\r\n        //点击列表\r\n        bind(DOM.scroll.list, 'click', '.js-smusic-song--item', function (event) {\r\n            const index = this.getAttribute('data-song-index');\r\n            if (utils.hasClass(this, 'active')) {\r\n                self.play();\r\n            } else {\r\n                __playMusic.call(self, index);\r\n            }\r\n        })\r\n    };\r\n\r\n    /**\r\n     * 播放歌曲\r\n     * @param index\r\n     * @param callback\r\n     * @param isInit\r\n     * @private\r\n     */\r\n    const __playMusic = function (index, callback, isInit) {\r\n        const [DOM, AUDIO, listLength] = [this.dom, this.audio, this.playList.length];\r\n        //index 调整\r\n        (index >= (listLength - 1)) && (index = (listLength - 1));\r\n        (index <= 0) && (index = 0);\r\n        this.playIndex = index;\r\n        //当前播放歌曲信息\r\n        const song = this.playList[this.playIndex];\r\n        if (!song) {\r\n            log(\"没有要播放的歌曲\");\r\n            return false;\r\n        }\r\n        const tempHandle = function () {\r\n            return __setBuffer.call(this);\r\n        }.bind(this);\r\n        //在canplay事件监听前移除之前的监听\r\n        AUDIO.removeEventListener('canplay', tempHandle, false);\r\n        _bufferTimer[this.smusicId] && clearInterval(_bufferTimer[this.smusicId]);\r\n\r\n        //刷新DOM\r\n        DOM.progress.buffer.style.width = '0px';\r\n        DOM.progress.value.style.width = '0px';\r\n        DOM.time.textContent = '00:00/00:00';\r\n        DOM.scroll.lyric.style.transform = 'translate3d(0, 0, 0)';\r\n        DOM.scroll.lyric.innerHTML = `<li class=\"empty\">正在加载歌词...</li>`;\r\n\r\n        $$('.js-smusic-song--item.active', DOM.scroll.list)\r\n            .forEach(item => {\r\n                item && utils.removeClass(item, 'active, pause');\r\n            });\r\n        const currentSong = $$('.js-smusic-song--item', DOM.scroll.list)[index];\r\n        currentSong && utils.addClass(currentSong, 'active');\r\n\r\n        AUDIO.src = song.audio;\r\n        AUDIO.load();\r\n        AUDIO.addEventListener('canplay', tempHandle, false);\r\n        if (isInit) {\r\n            this.config.autoPlay && AUDIO.play();\r\n        } else {\r\n            AUDIO.play();\r\n        }\r\n        const [title, singer, thumbnail] = [song.title || 'Smusic', song.singer || 'singer', song.thumbnail || thumbnailPlaceholder];\r\n        DOM.song.title.textContent = title;\r\n        DOM.song.singer.textContent = singer;\r\n        DOM.song.thumbnail.src = thumbnail;\r\n        DOM.scroll.title.setAttribute('title', `${singer} - ${title}`);\r\n        //加载歌词\r\n        __renderLyric.call(this);\r\n        callback && callback.call(this, song);\r\n    };\r\n\r\n    /**\r\n     * smusic\r\n     * playList 播放列表\r\n     * options 配置\r\n     */\r\n    class SmohanMusic {\r\n\r\n        /**\r\n         * 构造方法\r\n         * @param playList\r\n         * @param options\r\n         */\r\n        constructor(playList = [], options = {}) {\r\n            if (!Array.isArray(playList)) {\r\n                error(\"播放列表必须是一个数组\");\r\n            }\r\n            this.playList = playList;\r\n            this.audio = null;\r\n            this.version = version;\r\n            this.config = utils.assign({}, defaultConfig, options);\r\n            let playIndex = parseInt(this.config.playIndex),\r\n                playMode = parseInt(this.config.playMode),\r\n                volume = parseFloat(this.config.volume);\r\n\r\n            if (playIndex < 0)\r\n                playIndex = 0;\r\n            if (playIndex > this.playList.length - 1)\r\n                playIndex = this.playList.length - 1;\r\n\r\n            if (playMode < 1 || playMode > 3)\r\n                playMode = 1;\r\n\r\n            if (volume < 0 || volume > 1)\r\n                volume = .5;\r\n\r\n            this.playIndex = playIndex;\r\n            this.playMode = playMode;\r\n            this.volume = volume;\r\n        };\r\n\r\n        /**\r\n         * 通过模式播放\r\n         * 由播放模式定义播放索引\r\n         * prev,next,ended等方法都应该通过该接口调用\r\n         * 返回一个合理的播放索引\r\n         * @param type\r\n         * @param callback\r\n         * @param isInit\r\n         */\r\n        playByMode(type, callback, isInit) {\r\n            const [playMode, playIndex, songLength] = [Number(this.playMode), this.playIndex, this.playList.length];\r\n            let index = playIndex;\r\n            //如果没有定义播放类型，以及播放模式非随机，则直接播放当前索引\r\n            if (!type && playMode != 2) {\r\n                //todo 不做任何事\r\n            } else {\r\n                switch (playMode) {\r\n                    case 1:\r\n                        if (type == 'prev') {\r\n                            index = ((playIndex <= songLength - 1) && (playIndex > 0)) ? (playIndex - 1) : (songLength - 1);\r\n                        } else if (type == 'next' || type == 'ended') {\r\n                            index = (playIndex >= songLength - 1) ? 0 : (playIndex + 1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        index = _getRandomIndex(playIndex, songLength);\r\n                        break;\r\n                    case 3:\r\n                        if (type == 'prev') {\r\n                            index = ((playIndex <= songLength - 1) && (playIndex > 0)) ? (playIndex - 1) : (songLength - 1);\r\n                        } else if (type == 'next') {\r\n                            index = (playIndex >= songLength - 1) ? 0 : (playIndex + 1);\r\n                        } else {\r\n                            index = playIndex;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            __playMusic.call(this, index, callback, isInit);\r\n        };\r\n\r\n        /**\r\n         * 向列表中追加音乐\r\n         * @param music\r\n         * @param callback\r\n         * @returns {Array|*}\r\n         */\r\n        addSong(music = {}, callback = noop) {\r\n            if (music && music.audio) {\r\n                this.playList.push({\r\n                    title: music.title || '歌曲名',\r\n                    singer: music.singer || '歌手名',\r\n                    audio: music.audio,\r\n                    thumbnail: music.thumbnail || thumbnailPlaceholder,\r\n                    lyric: music.lyric | ''\r\n                });\r\n                this.refreshList();\r\n                callback && callback();\r\n            } else {\r\n                callback && callback(\"添加失败，参数不是一个对象或者未设置audio属性\");\r\n            }\r\n            return this.playList;\r\n        };\r\n\r\n        //刷新播放列表\r\n        refreshList() {\r\n            __renderList.call(this);\r\n        };\r\n\r\n        /**\r\n         * 下一首\r\n         * @param callback\r\n         */\r\n        next(callback) {\r\n            this.playByMode('next', callback);\r\n        };\r\n\r\n        /**\r\n         * 上一首\r\n         * @param callback\r\n         */\r\n        prev(callback) {\r\n            this.playByMode('next', callback);\r\n        };\r\n\r\n        /**\r\n         * 播放\r\n         * @param callback\r\n         */\r\n        play(callback) {\r\n            const BTN = this.dom.btn.play;\r\n            utils.removeClass(BTN, 'smusic-music-pause');\r\n            utils.addClass(BTN, 'smusic-music-play');\r\n            BTN.setAttribute('title', '暂停');\r\n            const $currentSong = $('.js-smusic-song--item.active', this.dom.scroll.list);\r\n            utils.removeClass($currentSong, 'pause');\r\n            this.playList.length && this.audio.play();\r\n            callback && callback.call(this, this.playList[this.playIndex]);\r\n        };\r\n\r\n        /**\r\n         * 暂停\r\n         * @param callback\r\n         */\r\n        pause(callback) {\r\n            const BTN = this.dom.btn.play;\r\n            utils.addClass(BTN, 'smusic-music-pause');\r\n            utils.removeClass(BTN, 'smusic-music-play');\r\n            const $currentSong = $('.js-smusic-song--item.active', this.dom.scroll.list);\r\n            utils.addClass($currentSong, 'pause');\r\n            BTN.setAttribute('title', '播放');\r\n            this.playList.length && this.audio.pause();\r\n            callback && callback.call(this, this.playList[this.playIndex]);\r\n        };\r\n\r\n        /**\r\n         * 设置音量\r\n         * @param volume\r\n         */\r\n        setVolume(volume = .5) {\r\n            volume = Number(volume);\r\n            volume < 0 && (volume = 0);\r\n            volume > 1 && (volume = 1);\r\n            const barHeight = this.dom.volume.bar.offsetHeight;\r\n            const sliderHeight = this.dom.volume.slider.offsetHeight;\r\n            const valueHeight = barHeight * volume;\r\n            const sliderTop = Math.min(((1 - volume) * barHeight), barHeight - sliderHeight);\r\n            if (volume === 0) {\r\n                utils.addClass(this.dom.btn.volume, 'smusic-volume--mute');\r\n                this.dom.btn.volume.setAttribute('title', '取消静音');\r\n                this.audio.muted = true;\r\n            } else {\r\n                utils.removeClass(this.dom.btn.volume, 'smusic-volume--mute');\r\n                this.audio.muted = false;\r\n                this.dom.btn.volume.setAttribute('title', '静音');\r\n            }\r\n            this.dom.volume.value.style.height = valueHeight + 'px';\r\n            this.dom.volume.slider.style.top = sliderTop + 'px';\r\n            this.volume = volume;\r\n            this.audio.volume = volume;\r\n        };\r\n\r\n        /**\r\n         * 设置播放模式\r\n         * @param mode\r\n         */\r\n        setMode(mode = 1) {\r\n            mode = Number(mode);\r\n            let title, className;\r\n            const $Mode = this.dom.btn.mode;\r\n            switch (mode) {\r\n                case 1:\r\n                default:\r\n                    title = '列表循环';\r\n                    className = 'smusic-mode--loop';\r\n                    break;\r\n                case 2:\r\n                    title = '随机播放';\r\n                    className = 'smusic-mode--random';\r\n                    break;\r\n                case 3:\r\n                    title = '单曲循环';\r\n                    className = 'smusic-mode--single';\r\n                    break;\r\n            }\r\n            $Mode.setAttribute('data-play-mode', mode.toString());\r\n            $Mode.setAttribute('title', title);\r\n            $Mode.className = $Mode.className.replace(/smusic-mode--\\w+/, className);\r\n            this.playMode = mode;\r\n        };\r\n\r\n        //初始化\r\n        init() {\r\n            const [config, create] = [this.config, _createDom(this.config)];\r\n            this.smusic = create.element;\r\n            this.smusicId = create.id;\r\n            this.audio = this.smusic.getElementsByTagName('audio')[0];\r\n            //缓存DOM\r\n            __domCache.call(this);\r\n            //渲染列表\r\n            __renderList.call(this);\r\n            //绑定事件\r\n            __bindAction.call(this);\r\n            //设置音量\r\n            this.setVolume(this.volume);\r\n            //设置播放模式\r\n            this.setMode(this.playMode);\r\n\r\n            if (this.playList.length) {\r\n                this.playByMode(undefined, function () {\r\n                    if (!config.autoPlay) {\r\n                        utils.trigger(this.dom.btn.play, 'click');\r\n                    }\r\n                }, true);\r\n            } else {\r\n                log(\"歌曲列表为空\");\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 获取当前播放的歌曲信息\r\n         * @returns {*}\r\n         */\r\n        getCurrentInfo() {\r\n            if (this.playList.length) {\r\n                const song = this.playList[this.playIndex];\r\n                song.index = this.playIndex;\r\n                song.volume = this.volume;\r\n                song.mode = this.playMode;\r\n                return song;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        //析构\r\n        destroy() { };\r\n    }\r\n\r\n    /**\r\n     * 作为全局对象返回\r\n     * @param playList\r\n     * @param config\r\n     * @constructor\r\n     */\r\n    win.SMusic = (playList, config) => new SmohanMusic(playList, config);\r\n})();"]}